<?php
declare(strict_types=1);

namespace Daylog\Tests\Unit\Entries;

use Codeception\Test\Unit;
use Daylog\Domain\Interfaces\Entries\EntryRepositoryInterface;
use Daylog\Tests\Support\Helper\EntriesSeeding;

/**
 * Base TestCase for Entry unit tests (shared across UC-1..UC-5).
 *
 * Purpose:
 * Provide common, deterministic seeding helpers for unit tests without touching a real DB.
 * Encapsulates pushing prepared rows from UC datasets into a fake repository instance.
 *
 * Mechanics:
 * - Accepts UC dataset shape with 'rows';
 * - Calls EntriesSeeding::intoFakeRepo() to populate the provided fake repository;
 * - Keeps tests focused on business logic, not on wiring/fixtures.
 *
 * Notes:
 * - Intended to be extended by concrete unit tests for Add/Get/Update/Delete use cases.
 */
abstract class BaseEntryUnitTest extends Unit
{
    /**
     * Seed fake repository with rows from a dataset (UC-specific builder).
     *
     * Purpose:
     * Provide deterministic baseline data for unit tests using a fake EntryRepositoryInterface.
     * Suitable for scenarios where the system under test depends on repository reads/writes,
     * but persistence must remain in-memory and fast.
     *
     * Mechanics:
     * - Extract 'rows' from the provided dataset (generated by a UC Dataset builder);
     * - Pass rows to EntriesSeeding::intoFakeRepo() to populate the fake repo;
     * - This avoids any coupling to a real database and keeps tests hermetic.
     *
     * @param EntryRepositoryInterface $repo Fake repository instance implementing the domain contract.
     * @param array{
     *     rows: array<int, array{
     *         id: string,
     *         title: string,
     *         body: string,
     *         date: string,
     *         createdAt: string,
     *         updatedAt: string
     *     }>
     * } $dataset Deterministic dataset containing prepared rows for seeding.
     *
     * @return void
     */
    protected function seedFromDataset(EntryRepositoryInterface $repo, array $dataset): void
    {
        $rows = $dataset['rows'];
        EntriesSeeding::intoFakeRepo($repo, $rows);
    }
}
